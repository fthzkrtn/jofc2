<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>jofc2</groupId>
    <artifactId>jofc2</artifactId>
    <packaging>jar</packaging>
    <version>1.0-rc3-SNAPSHOT</version>

    <name>Java for Open Flash Chart 2</name>
    <url>http://code.google.com/p/jofc2/</url>
    <description>
        This project provides a Java library for utilizing Open Flash Chart 2 (http://teethgrinder.co.uk/open-flash-chart-2/).
        It is a fork of ofcj (http://code.google.com/p/ofcj/) because the project seemed to be freezed.
        On the long run the idea is to provide a stable and well maintained library for use in industrial projects.
        Therefore feedback and contribution is very welcome, since an OSS project is only as good as its community.
    </description>

    <scm>
        <connection>scm:svn:http://jofc2.googlecode.com/svn/trunk/</connection>
    </scm>

    <repositories>
        <!--repository>
            <id>maven2-central-repository</id>
            <name>Maven2 Central Repository</name>
            <url>http://repo1.maven.org/maven2/</url>
        </repository-->

        <repository>
            <id>maven2-repository.dev.java.net</id>
            <name>Java.net Repository for Maven</name>
            <url>http://download.java.net/maven/2/</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>com.thoughtworks.xstream</groupId>
            <artifactId>xstream</artifactId>
            <version>1.3.1</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.5</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.5</source>
                    <target>1.5</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
        <sourceDirectory>src</sourceDirectory>
        <extensions>
            <extension>
                <groupId>org.jvnet.wagon-svn</groupId>
                <artifactId>wagon-svn</artifactId>
                <version>1.9</version>
            </extension>
        </extensions>

    </build>

    <distributionManagement>
        <!--
        To developpers who would like to deploy a build on the repository:
        you need to modify your settings.xml file, located in your $HOME/.m2/ directory
        and add the following lines in the "servers" section:

        <server>
            <id>jofc2.maven.repo</id>
            <username>YOUR_GOOGLE_CODE_USERNAME</username>
            <password>YOUR_GOOGLE_CODE_PASSWORD</password>
        </server>

        YOUR_GOOGLE_CODE_PASSWORD can be found here: http://code.google.com/hosting/settings
        more details: http://www.jroller.com/mrdon/entry/find_of_the_day_wagon 
        -->
        <repository>
            <id>jofc2.maven.repo</id>
            <name>Release Repository</name>
            <url>svn:https://jofc2.googlecode.com/svn/repository/releases/</url>
        </repository>
        <snapshotRepository>
            <id>jofc2.maven.repo</id>
            <name>Snapshot Repository</name>
            <url>svn:https://jofc2.googlecode.com/svn/repository/snapshots/</url>
            <uniqueVersion>false</uniqueVersion>
        </snapshotRepository>
    </distributionManagement>

</project>
